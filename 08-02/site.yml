---
# #Обновляем хосты
- name: Обновляем soft на всех хостах
  hosts: all
  become: true
  tasks:
  - name: Update & upgrade
    apt:
     upgrade: yes
     update_cache: yes
  

 #Ставим Java на все хосты

- name: Устанавливаем Java из файла
  hosts: all
  tasks:
    - name: Set facts for Java 11 vars
      set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java

    - name: Скачиваем архив с локального хранилища
      copy:
        src: "{{ java_oracle_jdk_package }}"
        dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
      register: download_java_binaries
      until: download_java_binaries is succeeded
      tags: ['never']

    - name: Существует ли директория установки?
      become: true
      file:
        state: directory
        path: "{{ java_home }}"
      tags: java

    - name: Распаковка Java в директорию установки
      become: true
      unarchive:
        copy: false
        src: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags: java

    - name: Экспорт переменных окружения для JAVA
      become: true
      template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
      tags: java

    
#Ставим эластик из гита

- name: Установка Elasticsearch на хост elastic
  hosts: elasticsearch
  tasks:

    - name: Скачиваем архив Elasticsearch
      get_url:
        url: "https://github.com/elastic/elasticsearch/archive/refs/tags/v{{ elastic_version }}.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic


    - name: Создаем директорию установки Elasticsearch
      file:
        state: directory
        path: "{{ elastic_home }}"
      tags: elastic


    - name: Распаковываем архив ES в директорию установки
      become: true
      unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "{{ elastic_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elastic_home }}/bin/elasticsearch"
      tags: elastic


    - name: Экспорт переменных окружения для Elastic
      become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
      tags: elastic

    - name: Получаем IP хоста elasticsearch и сохраняем в переменую
      delegate_to: localhost
      shell: "docker inspect -f {% raw %} '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' {% endraw %} elastic"
      register: elastic_ip
      check_mode: no
      tags: elastic

#Ставим Кибану

- name: Устанавливаем Kibana на хост kibana
  hosts: kibana
  tasks:

    - name: Скачиваем Kibana из Гитхаба
      get_url:
        url: "https://github.com/elastic/kibana/archive/refs/tags/v{{ kibana_ver }}.tar.gz"
        dest: "/tmp/kibana-{{ kibana_ver }}.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_kibana
      until: get_kibana is succeeded
      tags: kibana


    - name: Создаем директорию установки для Kibana
      file:
        path: "{{ kibana_home }}"
        state: directory
      tags: kibana


    - name: Распаковка Kibana в директорию установки
      become: true
      unarchive:
        copy: false
        src: "/tmp/kibana-{{ kibana_ver }}.tar.gz"
        dest: "{{ kibana_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ kibana_home }}/bin/kibana"
      tags: kibana


    - name: Экспорт переменных окружения для kibana
      become: true
      template:
        src: templates/kib.sh.j2
        dest: /etc/profile.d/kib.sh
      tags: kibana

    - name: Создаем базовую конфигурацию kibana
      become: true
      template:
       src: kibana.yml.j2
       dest: "{{ kibana_home }}/config/kibana.yml"
       mode: 0644   

# ставим logstash
    
- name: Устанавливаем logstagh из Гитхаба
  hosts: logstash
  check_mode: no
  tasks:
  - name: Скачиваем logstash из Гитхаба
    get_url:
      url: "https://github.com/elastic/logstash/archive/refs/tags/v{{ logstash_version }}.tar.gz"
      dest: "/tmp/logstash-{{ logstash_version }}.tar.gz"
      mode: 0755
      timeout: 60
      force: true
      validate_certs: false
    register: get_logstash
    until: get_logstash is succeeded
    tags: logstash


  - name: Создаем директорию установки для logstash
    file:
     path: "{{ logstash_home }}"
     state: directory
    tags: logstash


  - name: Распаковка Logstash в директорию установки
    become: true
    unarchive:
      copy: false
      src: "/tmp/logstash-{{ logstash_version }}.tar.gz"
      dest: "{{ logstash_home }}"
      extra_opts: [--strip-components=1]
      creates: "{{ logstash_home }}/bin/logstash"
    tags: logstash


  - name: Устанавливаем переменные для logstash
    become: true
    template:
      src: templates/log.sh.j2
      dest: /etc/profile.d/log.sh
    tags: logstash


  - name: Создаем базовую конфигурацию для logstash
    become: yes
    template:
      src: templates/logstash.conf.j2
      dest: "{{ logstash_home }}/logstash.conf"
      mode: 0755
    tags: logstash